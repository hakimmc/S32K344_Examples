
Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

Clock_Ip_ReportClockErrors/8 (Clock_Ip_ReportClockErrors) @06134000
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Clock_Ip_TriggerUpdateCgmXDivTrigCtrlTctlHhenUpdStat/2 
  Calls: 
Clock_Ip_TimeoutExpired/7 (Clock_Ip_TimeoutExpired) @060302a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Clock_Ip_TriggerUpdateCgmXDivTrigCtrlTctlHhenUpdStat/2 
  Calls: 
Clock_Ip_StartTimeout/6 (Clock_Ip_StartTimeout) @06030000
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Clock_Ip_TriggerUpdateCgmXDivTrigCtrlTctlHhenUpdStat/2 
  Calls: 
Clock_Ip_apxCgm/5 (Clock_Ip_apxCgm) @06031750
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_ConfigureCgmXDivTrigCtrlTctlHhenUpdStat/1 (read) Clock_Ip_ConfigureCgmXDivTrigCtrlTctlHhenUpdStat/1 (read) Clock_Ip_ConfigureCgmXDivTrigCtrlTctlHhenUpdStat/1 (read) Clock_Ip_TriggerUpdateCgmXDivTrigCtrlTctlHhenUpdStat/2 (read) Clock_Ip_TriggerUpdateCgmXDivTrigCtrlTctlHhenUpdStat/2 (read) 
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_au8ClockFeatures/4 (Clock_Ip_au8ClockFeatures) @06031708
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_ConfigureCgmXDivTrigCtrlTctlHhenUpdStat/1 (read) Clock_Ip_ConfigureCgmXDivTrigCtrlTctlHhenUpdStat/1 (read) Clock_Ip_TriggerUpdateCgmXDivTrigCtrlTctlHhenUpdStat/2 (read) Clock_Ip_TriggerUpdateCgmXDivTrigCtrlTctlHhenUpdStat/2 (read) 
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_axDividerTriggerCallbacks/3 (Clock_Ip_axDividerTriggerCallbacks) @06031240
  Type: variable definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Clock_Ip_Callback_DividerTriggerEmpty/0 (addr) Clock_Ip_Callback_DividerTriggerEmpty/0 (addr) Clock_Ip_ConfigureCgmXDivTrigCtrlTctlHhenUpdStat/1 (addr) Clock_Ip_TriggerUpdateCgmXDivTrigCtrlTctlHhenUpdStat/2 (addr) 
  Referring: 
  Availability: available
  Varpool flags: initialized read-only const-value-known
Clock_Ip_TriggerUpdateCgmXDivTrigCtrlTctlHhenUpdStat/2 (Clock_Ip_TriggerUpdateCgmXDivTrigCtrlTctlHhenUpdStat) @06030540
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_au8ClockFeatures/4 (read) Clock_Ip_au8ClockFeatures/4 (read) Clock_Ip_apxCgm/5 (read) Clock_Ip_apxCgm/5 (read) 
  Referring: Clock_Ip_axDividerTriggerCallbacks/3 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_ReportClockErrors/8 Clock_Ip_TimeoutExpired/7 Clock_Ip_StartTimeout/6 
Clock_Ip_ConfigureCgmXDivTrigCtrlTctlHhenUpdStat/1 (Clock_Ip_ConfigureCgmXDivTrigCtrlTctlHhenUpdStat) @060301c0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_au8ClockFeatures/4 (read) Clock_Ip_au8ClockFeatures/4 (read) Clock_Ip_apxCgm/5 (read) Clock_Ip_apxCgm/5 (read) Clock_Ip_apxCgm/5 (read) 
  Referring: Clock_Ip_axDividerTriggerCallbacks/3 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Clock_Ip_Callback_DividerTriggerEmpty/0 (Clock_Ip_Callback_DividerTriggerEmpty) @0602be00
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_axDividerTriggerCallbacks/3 (addr) Clock_Ip_axDividerTriggerCallbacks/3 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Clock_Ip_TriggerUpdateCgmXDivTrigCtrlTctlHhenUpdStat (const struct Clock_Ip_DividerTriggerConfigType * Config)
{
  uint32 DividerStatus;
  uint32 TimeoutTicks;
  uint32 ElapsedTime;
  uint32 StartTime;
  boolean TimeoutOccurred;
  uint32 SelectorIndex;
  uint32 Instance;
  <unnamed type> _1;
  unsigned char _2;
  <unnamed type> _3;
  unsigned char _4;
  <unnamed type> _5;
  volatile struct Clock_Ip_CgmMuxType * _6;
  volatile struct Clock_Ip_CgmMuxType * _7;
  long unsigned int _8;
  long unsigned int TimeoutTicks.0_9;
  _Bool _10;
  <unnamed type> _11;

  <bb 2> :
  _1 = Config_15(D)->Name;
  _2 = Clock_Ip_au8ClockFeatures[_1][0];
  Instance_16 = (uint32) _2;
  _3 = Config_15(D)->Name;
  _4 = Clock_Ip_au8ClockFeatures[_3][4];
  SelectorIndex_17 = (uint32) _4;
  TimeoutOccurred_18 = 0;
  _5 = Config_15(D)->TriggerType;
  if (_5 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  _6 = Clock_Ip_apxCgm[Instance_16][SelectorIndex_17];
  _6->MUX_DIV_TRIG ={v} 1;
  Clock_Ip_StartTimeout (&StartTime, &ElapsedTime, &TimeoutTicks, 50000);

  <bb 4> :
  _7 = Clock_Ip_apxCgm[Instance_16][SelectorIndex_17];
  _8 ={v} _7->MUX_DIV_UPD_STAT;
  DividerStatus_21 = _8 & 1;
  TimeoutTicks.0_9 = TimeoutTicks;
  TimeoutOccurred_23 = Clock_Ip_TimeoutExpired (&StartTime, &ElapsedTime, TimeoutTicks.0_9);
  if (DividerStatus_21 == 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _10 = ~TimeoutOccurred_23;
  if (_10 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  if (TimeoutOccurred_23 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _11 = Config_15(D)->Name;
  Clock_Ip_ReportClockErrors (1, _11);

  <bb 8> :
  StartTime ={v} {CLOBBER};
  ElapsedTime ={v} {CLOBBER};
  TimeoutTicks ={v} {CLOBBER};
  return;

}


Clock_Ip_ConfigureCgmXDivTrigCtrlTctlHhenUpdStat (const struct Clock_Ip_DividerTriggerConfigType * Config)
{
  uint32 SelectorIndex;
  uint32 Instance;
  <unnamed type> _1;
  unsigned char _2;
  <unnamed type> _3;
  unsigned char _4;
  <unnamed type> _5;
  volatile struct Clock_Ip_CgmMuxType * _6;
  volatile struct Clock_Ip_CgmMuxType * _7;
  long unsigned int _8;
  volatile struct Clock_Ip_CgmMuxType * _9;
  long unsigned int _10;

  <bb 2> :
  _1 = Config_13(D)->Name;
  _2 = Clock_Ip_au8ClockFeatures[_1][0];
  Instance_14 = (uint32) _2;
  _3 = Config_13(D)->Name;
  _4 = Clock_Ip_au8ClockFeatures[_3][4];
  SelectorIndex_15 = (uint32) _4;
  _5 = Config_13(D)->TriggerType;
  if (_5 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _6 = Clock_Ip_apxCgm[Instance_14][SelectorIndex_15];
  _6->MUX_DIV_TRIG_CTRL ={v} 1;
  goto <bb 5>; [INV]

  <bb 4> :
  _7 = Clock_Ip_apxCgm[Instance_14][SelectorIndex_15];
  _8 ={v} _7->MUX_DIV_TRIG_CTRL;
  _9 = Clock_Ip_apxCgm[Instance_14][SelectorIndex_15];
  _10 = _8 & 4294967294;
  _9->MUX_DIV_TRIG_CTRL ={v} _10;

  <bb 5> :
  return;

}


Clock_Ip_Callback_DividerTriggerEmpty (const struct Clock_Ip_DividerTriggerConfigType * Config)
{
  <bb 2> :
  return;

}


